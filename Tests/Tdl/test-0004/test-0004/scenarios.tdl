using Autotest.Products.KES_Dev.Suites.Common.GatedChain1.GatedTestsChain1;

scenario SbSTestScenario1 =
    from (Deployment , Platform) in (Deploy_Gated, w10rs4-x64), (Deploy_Middle, w10rs4-x86), (Deploy_Finish, win_10_rs3) 
    from Method in Gated1_S01_Installation, Gated1_S02_CheckFilesAndRegistry, Gated1_S03_CheckDrivers
    select
    {
        deployment Deployment;
        environments (Platform, KES);
        method Method;
        UniqueId = "BDA24CAF-BF05-49EC-9884-129A48C42FFF";
        Timeout = "02:30:00";
        ProductGroupName = "SbSProductGroup-1";
    };

platform gated_platforms = w10rs3-x64, win7-x64, win2012r2;
platform gated_workstation_platforms = w10rs3-x64, win7-x64, win2012r2;

barrier Barrier1 timeout "00:10:00";
barrier Barrier2 timeout "00:20:00";

scenario GatedChain1
{
    deployment Deploy_Gated;
    environments (gated_platforms, KES);
    sequence
    {
      method Autotest.Products.KES_Dev.Suites.Common.GatedChain1.GatedTestsChain1.Gated1_S01_Installation;
      wait-for-reboot 00:00:56;
      barrier Barrier1;
      method Autotest.Products.KES_Dev.Suites.Common.GatedChain1.GatedTestsChain1.Gated1_S02_CheckFilesAndRegistry;
      reboot;
      method Autotest.Products.KES_Dev.Suites.Common.GatedChain1.GatedTestsChain1.Gated1_S03_CheckDrivers;
      barrier Barrier2;
    }
    Area = "GatedTestsChain1";
    UniqueId = @"BDA24CAF-BF05-49EC-9884-129A48C42F8C";
    TfsId = 0;
    RevertAgentAfter = true;
    Timeout = "00:00:10";
}

scenario GatedChain2
{
    deployment Deploy_Gated;
    environments (gated_platforms, KES);
    sequence
    {
      method Autotest.Products.KES_Dev.Suites.Common.GatedChain1.GatedTestsChain1.Gated1_S01_Installation;
      barrier Barrier1;
      method Autotest.Products.KES_Dev.Suites.Common.GatedChain1.GatedTestsChain1.Gated1_S02_CheckFilesAndRegistry;
      method Autotest.Products.KES_Dev.Suites.Common.GatedChain1.GatedTestsChain1.Gated1_S03_CheckDrivers;
      barrier Barrier2;
    }
    Area = @"GatedTestsChain2";
    UniqueId = @"C3E98F14-10D5-4118-8DC9-103DC5A67C4F";
    TfsId = 0;
    RevertAgentAfter = true;
    Timeout = "00:00:10";
}

parallel scenario GateTests_KES = GatedChain1, GatedChain2;
