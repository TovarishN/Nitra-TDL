scenario Tests = Test1, Test2, Test3;
scenario Test1
{
    deployment Deploy1;
    environments (w10rs5-x64, MonorepoHelloWorld);
    method Ns1.DerivedClass.Method1;
    UniqueId = "C4B36F0E-820E-4AF3-BC95-9C552ECB04E8";
    RerunCountOnTestFailure = 0;
    LocalTestBinariesFolder = @"C:\Tests";
    ExternalAutotestId = 24;
    Timeout = "00:05:00";
}

scenario Test2
{
    deployment Deploy1;
    environments (w10rs5-x64, MonorepoHelloWorld);
    method Ns1.DerivedClass.Method2;
    UniqueId = "C4B36F0E-820E-4AF3-BC95-9C552ECB04E7";
    RerunCountOnTestFailure = 0;
    LocalTestBinariesFolder = @"C:\Tests";
    ExternalAutotestId = 24;
    Timeout = "00:05:00";
}

scenario Test3
{
    deployment Deploy1;
    environments (w10rs5-x64, MonorepoHelloWorld);
    method Ns1.DerivedClass.VirtualMethod;
    UniqueId = "C4B36F0E-820E-4AF3-BC95-9C552ECB04E9";
    RerunCountOnTestFailure = 0;
    LocalTestBinariesFolder = @"C:\Tests";
    ExternalAutotestId = 24;
    Timeout = "00:05:00";
}


suite Suite1
{
    platform w10rs5-x64;
    product MonorepoHelloWorld;
    Tests();
}

platform w10rs5-x64;

deployment Deploy1 (
    string PathToCerts = @"\\SomeShare\Autotests\UCP\Deployment\Certs"
)
    script @"\\SomeShare\Autotests\UCP\Deployment\Certs\installCertificates.ps1"
{
  expected 42;
}
product type X
{
  string Name;
  string Version;
}
product MonorepoHelloWorld : X
{
  Name = "MonorepoHelloWorld";
  Version = "1.0";
}