using DotNet;
using DotNet.AstUtils;

using Nitra;
using Nitra.Declarations;

using System.Collections.Immutable;

namespace Tdl
{
  abstract ast DeploymentScriptContent
  {
    in Symbol : Deployment.ScriptSymbol;

    | FilePath
      {
        Symbol.Path = TdlUtils.ConvertStringLiteral(Path);

        Path : CSharp.StringLiteral;
      }

    | Base64
      {
        Symbol.Base64    = TdlUtils.ParseBase64Literal(Data, context);
        Symbol.Extension = TdlUtils.ConvertStringLiteral(Extension);

        Data      : CSharp.StringLiteral;
        Extension : CSharp.StringLiteral;
      }

    | SourceCode
      {
        Symbol.Base64    = TdlUtils.CreateBase64Literal(Text);
        Symbol.Extension = TdlUtils.ConvertStringLiteral(Extension);

        Text      : CSharp.StringLiteral;
        Extension : CSharp.StringLiteral;
      }

    | EmbedFile
      {
        Symbol.EmbedPath = TdlUtils.CreateEmbedFilePath(Path, context);

        Path : CSharp.StringLiteral;
      }
  }
}
