using DotNet;
using Nitra;
using System;
using System.Collections.Immutable;

namespace Tdl
{
  [Record]
  public variant ScenarioAction
  {
    public Location : Location { get; }

    | Script
      {
        Name               : ParsedValue[string];
        Arguments          : ImmutableArray[ParsedValue[string]];
        Defs               : ImmutableArray[Def2];
        MaxRebootsCountOpt : ParsedValue[int];
      }
    | Config        { path   : ParsedValue[string]; MaxRebootsCountOpt : ParsedValue[int]; }
    | GTest
      {
        Name               : ParsedValue[string];
        Arguments          : ImmutableArray[ParsedValue[string]];
        MaxRebootsCountOpt : ParsedValue[int];
      }
    | Apk
      {
        Name               : ParsedValue[string];
        FilterOpt          : ParsedValue[string];
        RunnerPath         : ParsedValue[string];
        MaxRebootsCountOpt : ParsedValue[int];
      }
    | Login
      {
        User               : ParsedValue[string];
        Password           : ParsedValue[string];
      }
    | Logoff          { }
    | LockWorkstation { }
    | Method          { method : Member.MethodSymbol; MaxRebootsCountOpt : ParsedValue[int]; }
    | Reboot          { }
    | WaitForReboot   { TimeSpan : string; }
    | Barrier         { barrier : BarrierSymbol; }
  }
}
